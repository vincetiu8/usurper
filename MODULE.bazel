module(name = "usurper")

# clang toolchain
bazel_dep(name = "toolchains_llvm", version = "1.0.0")

# To directly use a commit from GitHub, replace commit with the commit you want.
# Otherwise, omit this block.
git_override(
  module_name = "toolchains_llvm",
  commit = "329910897f3114f3f5d24407d9abf49b244056d2",
  remote = "https://github.com/bazel-contrib/toolchains_llvm",
)

# Configure and register the toolchain.
llvm = use_extension("@toolchains_llvm//toolchain/extensions:llvm.bzl", "llvm")
llvm.toolchain(
   llvm_version = "16.0.0",
)

use_repo(llvm, "llvm_toolchain")

register_toolchains("@llvm_toolchain//:all")

# Hedron's Compile Commands Extractor for Bazel
# https://github.com/hedronvision/bazel-compile-commands-extractor
bazel_dep(name = "hedron_compile_commands", dev_dependency = True)
git_override(
  module_name = "hedron_compile_commands",
  remote = "https://github.com/hedronvision/bazel-compile-commands-extractor.git",
  commit = "1e08f8e0507b6b6b1f4416a9a22cf5c28beaba93",
  # Replace the commit hash (above) with the latest (https://github.com/hedronvision/bazel-compile-commands-extractor/commits/main).
  # Even better, set up Renovate and let it do the work for you (see "Suggestion: Updates" in the README).
)

# Boost
# Famous C++ library that has given rise to many new additions to the C++ Standard Library
# Makes @boost available for use: For example, add `@boost//:algorithm` to your deps.
# For more, see https://github.com/nelhage/rules_boost and https://www.boost.org
bazel_dep(name = "rules_boost", repo_name = "com_github_nelhage_rules_boost")
archive_override(
  module_name = "rules_boost",
  urls = "https://github.com/nelhage/rules_boost/archive/refs/heads/master.tar.gz",
  strip_prefix = "rules_boost-master",
  # It is recommended to edit the above URL and the below sha256 to point to a specific version of this repository.
  # integrity = "sha256-...",
)

non_module_boost_repositories = use_extension("@com_github_nelhage_rules_boost//:boost/repositories.bzl", "non_module_dependencies")
use_repo(
  non_module_boost_repositories,
  "boost",
)

# catch2 testing library
bazel_dep(name = "catch2", version = "3.6.0")

bazel_dep(
  name = "rules_foreign_cc",
  version = "0.11.1",
)

non_module_dependencies = use_extension("//libpqxx:libpqxx.bzl", "non_module_dependencies")
use_repo(non_module_dependencies, "libpqxx")
