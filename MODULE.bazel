module(name = "usurper")

###############################################################################
# Bazel now uses Bzlmod by default to manage external dependencies.
# Please consider migrating your external dependencies from WORKSPACE to MODULE.bazel.
#
# For more details, please check https://github.com/bazelbuild/bazel/issues/18958
###############################################################################

# Hedron's Compile Commands Extractor for Bazel
# https://github.com/hedronvision/bazel-compile-commands-extractor
bazel_dep(name = "hedron_compile_commands", dev_dependency = True)
git_override(
  module_name = "hedron_compile_commands",
  remote = "https://github.com/hedronvision/bazel-compile-commands-extractor.git",
  commit = "0e990032f3c5a866e72615cf67e5ce22186dcb97",
  # Replace the commit hash (above) with the latest (https://github.com/hedronvision/bazel-compile-commands-extractor/commits/main).
  # Even better, set up Renovate and let it do the work for you (see "Suggestion: Updates" in the README).
)

# Boost
# Famous C++ library that has given rise to many new additions to the C++ Standard Library
# Makes @boost available for use: For example, add `@boost//:algorithm` to your deps.
# For more, see https://github.com/nelhage/rules_boost and https://www.boost.org
bazel_dep(name = "rules_boost", repo_name = "com_github_nelhage_rules_boost")
archive_override(
  module_name = "rules_boost",
  urls = "https://github.com/nelhage/rules_boost/archive/refs/heads/master.tar.gz",
  strip_prefix = "rules_boost-master",
  # It is recommended to edit the above URL and the below sha256 to point to a specific version of this repository.
  # integrity = "sha256-...",
)

non_module_boost_repositories = use_extension("@com_github_nelhage_rules_boost//:boost/repositories.bzl", "non_module_dependencies")
use_repo(
  non_module_boost_repositories,
  "boost",
)

# catch2 testing library
bazel_dep(name = "catch2", version = "3.6.0")
